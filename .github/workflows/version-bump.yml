# .github/workflows/bump_version.yml
name: Bump Version on Release Drafter Completion

on:
  workflow_run:
    workflows: ["Release Drafter"]  # Must match the name of the Release Drafter workflow
    types:
      - completed

jobs:
  bump-version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Retrieve the whole history for accurate versioning

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the version you're using

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Fetch Draft Release Version
        id: fetch_version
        run: |
          # Fetch the latest draft release
          RELEASES=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases)

          # Use jq to extract version info from the latest draft release
          VERSION=$(echo "$RELEASES" | jq -r '[.[] | select(.draft == true)][0].name' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')

          if [ -z "$VERSION" ]; then
            echo "No valid version found in draft releases."
            exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump Version with bump2version
        run: |
          bump2version --new-version $VERSION --allow-dirty --verbose
        env:
          VERSION: ${{ env.VERSION }}

      - name: Check for Changes
        id: changes
        run: |
          git diff
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit Changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git add client_code/ server_code/
          git commit -m "Bump version to $VERSION" || echo "No changes to commit"

      - name: Push Changes
        if: steps.changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version  # Used for the version update PR

      - name: Create or Update Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version
          title: "Bump version to ${{ env.VERSION }}"
          commit-message: "Bump version to ${{ env.VERSION }}"
          body: |
            This PR updates the `__version__` fields to the latest version: **${{ env.VERSION }}**.
          labels: version-update
