name: Bump Version

on:
  workflow_run:
    workflows: ["Release Drafter"]  # Must match the name of the Release Drafter workflow
    types:
      - completed
  workflow_dispatch:  # Optional: Remove after testing

jobs:
  bump-version:
    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necessary for `bump2version` to work correctly

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version you use

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version jq

      - name: Get Draft Releases
        id: get_drafts
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            console.log(`Fetching releases for ${owner}/${repo}`);

            const releases = await github.rest.repos.listReleases({
              owner,
              repo,
              per_page: 100
            });
            console.log(`Total releases fetched: ${releases.data.length}`);

            const draftReleases = releases.data.filter(release => release.draft);
            console.log(`Draft releases found: ${draftReleases.length}`);

            if (draftReleases.length === 0) {
              console.log('No draft releases found.');
              core.setOutput('found', 'false');
            } else {
              const latestDraft = draftReleases[0];
              console.log(`Latest draft release: ${latestDraft.name}`);

              const versionMatch = latestDraft.name.match(/v(\d+\.\d+\.\d+)(?:[-_].*)?$/);
              if (versionMatch) {
                const version = versionMatch[1];
                console.log(`Parsed version: ${version}`);
                core.setOutput('version', version);
                core.setOutput('found', 'true');
              } else {
                console.log('No valid version found in the latest draft release title.');
                core.setOutput('found', 'false');
                // Optionally, you can fail the step if version parsing is critical
                // core.setFailed('No valid version found in the latest draft release title.');
              }
            }

      - name: List Releases for Debugging
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/releases \
               | jq '.[] | {name: .name, draft: .draft}'

      - name: Debug Outputs
        run: |
          echo "Found Draft: ${{ steps.get_drafts.outputs.found }}"
          echo "Version: ${{ steps.get_drafts.outputs.version }}"

      - name: Configure Git
        if: steps.get_drafts.outputs.found == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump Version with bump2version
        if: steps.get_drafts.outputs.found == 'true'
        run: |
          bump2version --new-version $VERSION --allow-dirty patch --verbose
        env:
          VERSION: ${{ steps.get_drafts.outputs.version }}

      - name: Check for Changes
        if: steps.get_drafts.outputs.found == 'true'
        id: changes
        run: |
          git diff
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit Changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git add client_code/ server_code/
          git commit -m "Bump version to ${{ steps.get_drafts.outputs.version }}" || echo "No changes to commit"

      - name: Push Changes
        if: steps.changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-branch  # Dedicated branch for version bumps
          force: true

      - name: Create or Update Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-branch
          title: "Bump version to ${{ steps.get_drafts.outputs.version }}"
          commit-message: "Bump version to ${{ steps.get_drafts.outputs.version }}"
          body: |
            This PR updates the `__version__` fields in the codebase to the latest version: **${{ steps.get_drafts.outputs.version }}**.

            Please review and merge to apply the version update.
          labels: skip-changelog
