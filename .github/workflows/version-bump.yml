# .github/workflows/bump_version.yml
name: Scheduled Bump Version on Draft Release

on:
  workflow_run:
    workflows: ["Release Drafter"]  # Must match the name of the Release Drafter workflow
    types:
      - completed
  workflow_dispatch:  # Optional: Remove after testing

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necessary for `bump2version` to work correctly

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version you use

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version

      - name: Get Draft Releases
        id: get_drafts
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 10
            });
            const draftReleases = releases.data.filter(release => release.draft);
            if (draftReleases.length === 0) {
              core.setOutput('found', 'false');
            } else {
              // Assuming you want to process the latest draft release
              const latestDraft = draftReleases[0];
              const versionMatch = latestDraft.name.match(/v(\d+\.\d+\.\d+)/);
              if (versionMatch) {
                core.setOutput('version', versionMatch[1]);
                core.setOutput('found', 'true');
              } else {
                core.setOutput('found', 'false');
                core.setFailed('No valid version found in the latest draft release title.');
              }
            }

      - name: Exit if No Draft Release Found
        if: steps.get_drafts.outputs.found != 'true'
        run: echo "No draft releases found. Exiting."

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump Version with bump2version
        run: |
          bump2version --new-version $VERSION --allow-dirty patch --verbose
        env:
          VERSION: ${{ steps.get_drafts.outputs.version }}

      - name: Check for Changes
        id: changes
        run: |
          git diff
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit Changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git add client_code/ server_code/
          git commit -m "Bump version to $VERSION" || echo "No changes to commit"

      - name: Push Changes
        if: steps.changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-branch  # Dedicated branch for version bumps

      - name: Create or Update Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-version-branch
          title: "Bump version to ${{ steps.get_drafts.outputs.version }}"
          commit-message: "Bump version to ${{ steps.get_drafts.outputs.version }}"
          body: |
            This PR updates the `__version__` fields in the codebase to the latest version: **${{ steps.get_drafts.outputs.version }}**.

            Please review and merge to apply the version update.
          labels: version-update
